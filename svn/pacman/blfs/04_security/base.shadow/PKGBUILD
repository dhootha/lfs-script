pkgname=${name}
pkgver=${version}
pkgrel=1
pkgdesc="Shadow password file utilities"
arch=('i686' 'x86_64')
url="http://pkg-shadow.alioth.debian.org/"
license=('custom')
groups=('base')
depends=()
makedepends=()
options=()
conflicts=('shadow-lfs')
install='install'
source=(${_url})
md5sums=(${md5})

build() {
  cd ${srcdir}/${_pkgname}-${pkgver}

  sed -i 's/groups$(EXEEXT) //' src/Makefile.in
  find man -name Makefile.in -exec sed -i 's/groups\.1 / /' {} \;
  sed -i -e 's/ ko//' -e 's/ zh_CN zh_TW//' man/Makefile.in

  sed -i -e 's@#ENCRYPT_METHOD DES@ENCRYPT_METHOD SHA512@' \
         -e 's@/var/spool/mail@/var/mail@' etc/login.defs

  sed -i -e 's@PATH=/sbin:/bin:/usr/sbin:/usr/bin@&:/usr/local/sbin:/usr/local/bin@' \
         -e 's@PATH=/bin:/usr/bin@&:/usr/local/bin@' etc/login.defs

  ./configure --prefix=/usr --sysconfdir=/etc
  make
}

package() {
  cd ${srcdir}/${_pkgname}-${pkgver}
  make DESTDIR=${pkgdir} install

  install -dv ${pkgdir}/bin
  mv -v ${pkgdir}/usr/bin/passwd ${pkgdir}/bin

#  sed -i 's/yes/no/' ${pkgdir}/etc/default/useradd

  install -v -m644 ${pkgdir}/etc/login.defs ${pkgdir}/etc/login.defs.orig &&
  for FUNCTION in FAIL_DELAY FAILLOG_ENAB \
                  LASTLOG_ENAB \
                  MAIL_CHECK_ENAB \
                  OBSCURE_CHECKS_ENAB \
                  PORTTIME_CHECKS_ENAB \
                  QUOTAS_ENAB \
                  CONSOLE MOTD_FILE \
                  FTMP_FILE NOLOGINS_FILE \
                  ENV_HZ PASS_MIN_LEN \
                  SU_WHEEL_ONLY \
                  CRACKLIB_DICTPATH \
                  PASS_CHANGE_TRIES \
                  PASS_ALWAYS_WARN \
                  CHFN_AUTH ENCRYPT_METHOD \
                  ENVIRON_FILE
  do
      sed -i "s/^${FUNCTION}/# &/" ${pkgdir}/etc/login.defs
  done

  install -dv ${pkgdir}/etc/pam.d

  cat > ${pkgdir}/etc/pam.d/system-account << "EOF"
# Begin /etc/pam.d/system-account

account   required    pam_unix.so

# End /etc/pam.d/system-account
EOF

  cat > ${pkgdir}/etc/pam.d/system-auth << "EOF"
# Begin /etc/pam.d/system-auth

auth      required    pam_unix.so

# End /etc/pam.d/system-auth
EOF

  cat > ${pkgdir}/etc/pam.d/system-password << "EOF"
# Begin /etc/pam.d/system-password

# use sha512 hash for encryption, use shadow, and try to use any previously
# defined authentication token (chosen password) set by any prior module
password  required    pam_unix.so       sha512 shadow try_first_pass

# End /etc/pam.d/system-password
EOF

  cat > ${pkgdir}/etc/pam.d/system-session << "EOF"
# Begin /etc/pam.d/system-session

session   required    pam_unix.so

# End /etc/pam.d/system-session
EOF

  cat > ${pkgdir}/etc/pam.d/login << "EOF"
# Begin /etc/pam.d/login

# Set failure delay before next prompt to 3 seconds
auth      optional    pam_faildelay.so  delay=3000000

# Check to make sure that the user is allowed to login
auth      requisite   pam_nologin.so

# Check to make sure that root is allowed to login
# Disabled by default. You will need to create /etc/securetty
# file for this module to function. See man 5 securetty.
#auth      required    pam_securetty.so

# Additional group memberships - disabled by default
#auth      optional    pam_group.so

# include the default auth settings
auth      include     system-auth

# check access for the user
account   required    pam_access.so

# include the default account settings
account   include     system-account

# Set default environment variables for the user
session   required    pam_env.so

# Set resource limits for the user
session   required    pam_limits.so

# Display date of last login - Disabled by default
#session   optional    pam_lastlog.so

# Display the message of the day - Disabled by default
#session   optional    pam_motd.so

# Check user's mail - Disabled by default
#session   optional    pam_mail.so      standard quiet

# include the default session and password settings
session   include     system-session
password  include     system-password

# End /etc/pam.d/login
EOF

  cat > ${pkgdir}/etc/pam.d/passwd << "EOF"
# Begin /etc/pam.d/passwd

password  include     system-password

# End /etc/pam.d/passwd
EOF

  cat > ${pkgdir}/etc/pam.d/su << "EOF"
# Begin /etc/pam.d/su

# always allow root
auth      sufficient  pam_rootok.so
auth      include     system-auth

# include the default account settings
account   include     system-account

# Set default environment variables for the service user
session   required    pam_env.so

# include system session defaults
session   include     system-session

# End /etc/pam.d/su
EOF

  cat > ${pkgdir}/etc/pam.d/chage << "EOF"
#Begin /etc/pam.d/chage

# always allow root
auth      sufficient  pam_rootok.so

# include system defaults for auth account and session
auth      include     system-auth
account   include     system-account
session   include     system-session

# Always permit for authentication updates
password  required    pam_permit.so

# End /etc/pam.d/chage
EOF

  for PROGRAM in chfn chgpasswd chpasswd chsh groupadd groupdel \
                 groupmems groupmod newusers useradd userdel usermod
  do
      install -v -m644 ${pkgdir}/etc/pam.d/chage ${pkgdir}/etc/pam.d/${PROGRAM}
      sed -i "s/chage/${PROGRAM}/g" ${pkgdir}/etc/pam.d/${PROGRAM}
  done

  cat > ${pkgdir}/etc/pam.d/other << "EOF"
# Begin /etc/pam.d/other

auth        required        pam_warn.so
auth        required        pam_deny.so
account     required        pam_warn.so
account     required        pam_deny.so
password    required        pam_warn.so
password    required        pam_deny.so
session     required        pam_warn.so
session     required        pam_deny.so

# End /etc/pam.d/other
EOF

  [ -f ${pkgdir}/etc/login.access ] && mv -v ${pkgdir}/etc/login.access{,.NOUSE}

  [ -f ${pkgdir}/etc/limits ] && mv -v ${pkgdir}/etc/limits{,.NOUSE}
}

# vim:set ts=2 sw=2 et:
